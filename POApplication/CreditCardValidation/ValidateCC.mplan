<?xml version = '1.0' encoding = 'UTF-8'?>
<!--Generated by Oracle SOA Modeler version 11.1.1.9.0 at [3/11/16 5:50 AM].-->
<Mediator name="ValidateCC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.oracle.com/sca/1.0/mediator"
          wsdlTargetNamespace="http://xmlns.oracle.com/POApplication/CreditCardValidation/ValidateCreditCard"
          xmlns:inp1="http://techlabs.local/ns/CCAuthorizationService">
  <operation name="validatecreditcard" deliveryPolicy="AllOrNothing"
             priority="4" validateSchema="false">
    <switch>
      <case executionType="direct"
            name="CreditCardDBService.CreditCardDBServiceSelect">
        <condition language="xpath">
          <expression>starts-with($in.CreditCheckRequest/inp1:CreditCheckRequest/inp1:CCNumber, '9000')</expression>
        </condition>
        <action>
          <transform>
            <part name="$out.CreditCardDBServiceSelect_inputParameters"
                  function="xslt(Transformations/CreditCheckRequest_To_CreditCardDBServiceSelect_ccNumInputParameters.xsl, $in.CreditCheckRequest)"/>
          </transform>
          <invoke reference="CreditCardDBService"
                  operation="CreditCardDBServiceSelect">
            <onReply>
              <transform>
                <part name="$out.CreditCheckResponse"
                      function="xslt(Transformations/CreditcardsCollection_To_CreditCheckResponse.xsl, $in.CreditcardsCollection)"/>
              </transform>
              <reply/>
            </onReply>
          </invoke>
        </action>
      </case>
      <case executionType="direct"
            name="CheckCCLimit.checkcclimit_client.validatecreditcard">
        <condition language="xpath">
          <expression>not(starts-with($in.CreditCheckRequest/inp1:CreditCheckRequest/inp1:CCNumber, '9000'))</expression>
        </condition>
        <action>
          <transform>
            <part name="$out.CreditCheckRequest"
                  function="xslt(Transformations/CreditCheckRequest_To_CreditCheckRequest.xsl, $in.CreditCheckRequest)"/>
          </transform>
          <invoke reference="CheckCCLimit.checkcclimit_client"
                  operation="validatecreditcard">
            <onReply>
              <transform>
                <part name="$out.CreditCheckResponse"
                      function="xslt(Transformations/CreditCheckResponse_To_CreditCheckResponse.xsl, $in.CreditCheckResponse)"/>
              </transform>
              <reply/>
            </onReply>
            <onFault type="validateCCfault">
              <transform>
                <part name="$out.CreditCheckFault"
                      function="xslt(Transformations/CreditCheckFault_To_CreditCheckFault.xsl, $in.CreditCheckFault)"/>
              </transform>
              <fault type="validateCCfault"/>
            </onFault>
          </invoke>
        </action>
      </case>
    </switch>
  </operation>
</Mediator>
